{{{
public class TransactionsView extends ViewWithUiHandlers<TransactionsUiHandlers> implements
        TransactionsPresenter.MyView {
    public interface Binder extends UiBinder<Widget, TransactionsView> {
    }

    @UiField(provided = true)
    CellTable<Transaction> transactionsTable;
    @UiField(provided = true)
    SimplePager pager;

    @Inject
    public TransactionsView(final Binder uiBinder,
                            final UiHandlersStrategy<TransactionsUiHandlers> adminUiHandlersStrategy,
                            CellTable<Transaction> transactionsTable,
                            final SimplePager pager,
                            final TransactionAsyncDataProviderFactory transactionAsyncDataProviderFactory) {
        super(adminUiHandlersStrategy);

        this.transactionsTable = transactionsTable;

        transactionsTable.setPageSize(TransactionsPresenter.PAGESIZE);
        this.pager = pager;
        this.pager.setPageSize(TransactionsPresenter.PAGESIZE);
        this.pager.setDisplay(transactionsTable);

        initWidget(uiBinder.createAndBindUi(this));

        setupColumns();

        boolean displayCurrentUserTransactions = false;
        transactionAsyncDataProviderFactory.createDataProvider(transactionsTable, displayCurrentUserTransactions);
    }
//...
}

}}}