# appengine data transfer properties
# Note: be sure you have the remote api servelet in the web.inf servlet setup.
# example parameters file

# app engine project id and Google credentials
# app id will look like studentlearningplan.appspot.com or project.appspot.com
# if you use Google's two step authentication go here for password https://accounts.google.com/b/0/IssuedAuthSubTokens
appengine.applicationid = studentlearningplan.appspot.com
appengine.username = branflake2267@gmail.com
appengine.password = nvnccqpiiimzubiv

# [all|[entity1,entity2,entity3]] 
# like = entity1, entity2, entity3
# like = all
# like =       # will download nothing
appengine.download.entities = all

# for testing this with safety. only downloand 100 entities. erase it to download all of them
appengine.download.numberof.entities = 100


# download data to file
download.to.file = true
download.to.sql = false

# download files to directory
download.directory = /Users/branflake2267/tmp/appenginetest/



# sql server parameters - replicated from context.xml resource servlet format
sqlserver.param = name = jdbc/conn
sqlserver.param = host = 192.168.10.79
sqlserver.param = port = 3306
sqlserver.param = username = test
sqlserver.param = password = test
sqlserver.param = database = test
sqlserver.param = auth = Container
sqlserver.param = type = javax.sql.DataSource
sqlserver.param = removeAbandoned = true
sqlserver.param = removeAbandonedTimeout = 150
sqlserver.param = logAbandoned = true
sqlserver.param = maxActive = 200
sqlserver.param = maxIdle = 10
sqlserver.param = maxWait = 90
sqlserver.param = url = jdbc:mysql://192.168.10.79:3306/test?autoReconnect=true
sqlserver.param = driverClassName = com.mysql.jdbc.Driver

# pooling parameters
# be sure the process can read and write to this location
sqlserver.pooling.tmppath = /Users/branflake2267/tmp

# tables for this created will start with this
sqlserver.tablebase = testae_

